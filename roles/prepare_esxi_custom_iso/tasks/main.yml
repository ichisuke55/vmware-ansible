---
# tasks file for prepare-custom-esxi-iso
# ref: https://docs.vmware.com/en/VMware-vSphere/7.0/com.vmware.esxi.install.doc/GUID-C03EADEA-A192-4AB4-9B71-9256A9CB1F9C.html
- name: Create temp dir
  ansible.builtin.file:
    path: "{{ build.temp_folder }}"
    state: directory
    mode: "755"

- name: Mount ESXi iso
  ansible.posix.mount:
    path: "{{ build.mount_point }}"
    src: "{{ build.iso_directory }}/{{ build.iso_file }}"
    fstype: iso9660
    opts: ro
    boot: false
    state: mounted
  become: true

- name: Copy all mounted file from ESXi iso
  ansible.builtin.copy:
    src: "{{ build.mount_point }}/"
    dest: "{{ build.temp_folder }}/{{ build.esxi_installer }}/"
    mode: "666"

- name: Edit boot.cfg
  ansible.builtin.replace:
    dest: "{{ build.temp_folder }}/{{ build.esxi_installer }}/efi/boot/boot.cfg"
    regexp: 'kernelopt=.*'
    replace: 'kernelopt=runweasel ks=cdrom:/KS.CFG'
    mode: "644"

- name: Create directory for each nested ESXi host
  ansible.builtin.file:
    path: "{{ build.temp_folder }}/{{ item.value.vm_name }}"
    state: directory
    mode: "755"
  loop: "{{ nested_esxi.host | dict2items }}"

- name: Create kickstart file for each nested ESXi host
  ansible.builtin.template:
    src: "{{ build.template_file }}"
    dest: "{{ build.temp_folder }}/{{ item.value.vm_name }}/KS.CFG"
    mode: "666"
  loop: "{{ nested_esxi.host | dict2items }}"

- include_tasks: build_iso.yml
  with_items:
    - "{{ nested_esxi.host | dict2items }}"

- name: Unmount ESXi installer
  ansible.posix.mount:
    path: "{{ build.mount_point }}"
    state: absent
  become: true

- name: Upload ESXi isos to the datastore
  community.vmware.vsphere_copy:
    hostname: "{{ common.vsphere.fqdn }}"
    username: "{{ common.vsphere.user }}"
    password: "{{ common.vsphere.password }}"
    validate_certs: "{{ common.vsphere.validate_certs }}"
    datacenter: "{{ common.vsphere.datacenter }}"
    src: "{{ build.temp_folder }}/{{ item.value.vm_name }}-kickstart.iso"
    datastore: "{{ common.vsphere.datastore }}"
    path: "{{ common.vsphere.datastore_path }}/{{ item.value.vm_name }}-kickstart.iso"
  loop: "{{ nested_esxi.host | dict2items }}"
