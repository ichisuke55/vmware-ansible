---
# tasks file for nsx/deploy_nsx_manager
- name: Check if manager already deployed
  ansible.builtin.uri:
    url: "https://{{ nested_nsx.fqdn }}"
    validate_certs: "{{ nested_nsx.validate_certs }}"
    timeout: 3
    return_content: true
  ignore_errors: true
  register: nsx_mgr_check_result

- name: Deploy NSX manager block
  when: nsx_mgr_check_result.status != 200
  block:
  - name: Deploy NSX manager by ovf file
    community.vmware.vmware_deploy_ovf:
      hostname: "{{ common.vsphere.fqdn }}"
      username: "{{ common.vsphere.user }}"
      password: "{{ common.vsphere.password }}"
      validate_certs: "{{ common.vsphere.validate_certs }}"
      name: "{{ nested_nsx.name }}"
      datacenter: "{{ common.vsphere.datacenter }}"
      datastore: "{{ nested_nsx.datastore }}"
      disk_provisioning: "{{ nested_nsx.disk_provi }}"
      deployment_option: "{{ nested_nsx.deploy_size }}"
      networks:
        "Network 1": "{{ common.vsphere.port_group.nested[0].name }}"
      ova: "{{ build.ovf_directory }}/{{ build.nsx_ova }}"
      wait: true
      power_on: false
      fail_on_spec_warnings: true
      inject_ovf_env: true
      properties:
        nsx_cli_audit_passwd_0: "{{ nested_nsx.property.cli_audit_password }}"
        nsx_cli_passwd_0: "{{ nested_nsx.property.cli_password }}"
        nsx_allowSSHRootLogin: "{{ nested_nsx.property.allow_ssh_root_login }}"
        nsx_isSSHEnabled: "{{ nested_nsx.property.ssh_enable }}"
        nsx_dns1_0: "{{ common.dns.primary.ipv4 }}"
        nsx_domain_0: "{{ common.dns.domain }}"
        nsx_gateway_0: "{{ nested_nsx.address.gateway }}"
        nsx_hostname: "{{ nested_nsx.fqdn }}"
        nsx_ip_0: "{{ nested_nsx.address.ipv4 }}"
        nsx_netmask_0: "{{ nested_nsx.address.netmask }}"
        nsx_ntp_0: "{{ common.ntp.primary.ipv4 }}"
        nsx_passwd_0: "{{ nested_nsx.property.admin_password }}"
        nsx_role: "{{ nested_nsx.property.nsx_role }}"
    async: 2400
    poll: 0
    register: nsx_deploy_result

  - name: Check if NSX-T Manager deployed
    ansible.builtin.async_status:
      jid: "{{ nsx_deploy_result.ansible_job_id }}"
    register: job_result
    until: job_result.finished
    retries: 240
    delay: 10

  - name: Power-on NSX-T Manager
    community.vmware.vmware_guest:
      hostname: "{{ common.vsphere.fqdn }}"
      username: "{{ common.vsphere.user }}"
      password: "{{ common.vsphere.password }}"
      validate_certs: "{{ common.vsphere.validate_certs }}"
      name: "{{ nested_nsx.name }}"
      state: poweredon
      wait_for_ip_address: true
      wait_for_ip_address_timeout: 600

  - name: Check manager status
    ansible.builtin.uri:
      url: "https://{{ nested_nsx.address.ipv4 }}/api/v1/cluster-manager/status"
      user: "{{ nested_nsx.property.cli_username }}"
      password: "{{ nested_nsx.property.cli_password }}"
      method: "GET"
      force_basic_auth: true
      validate_certs: "{{ common.vsphere.validate_certs }}"
      return_content: true
    retries: 60
    delay: 10
    register: result
    until: "'\"UNKNOWN\"' not in result.content and '\"DOWN\"' not in result.content and result is not failed"

- name: Get thumbprint for register edges
  ansible.builtin.uri:
    url: "https://{{ nested_nsx.address.ipv4 }}/api/v1/cluster/nodes"
    user: "{{ nested_nsx.property.cli_username }}"
    password: "{{ nested_nsx.property.cli_password }}"
    method: "GET"
    force_basic_auth: true
    validate_certs: "{{ common.vsphere.validate_certs }}"
    return_content: true
  register: result

- name: Concat manager_role response
  ansible.builtin.set_fact:
    concat_result: '{{ result.json.results | selectattr("manager_role", "defined") }}'

- name: Set fact api thumbprint
  ansible.builtin.set_fact:
    mp_api_thumbprint: "{{ concat_result[0].manager_role.api_listen_addr.certificate_sha256_thumbprint }}"
